version: "3.8"

services:
  database:
    container_name: database-service
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD};
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "4306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      symfony_docker:

  php:
    container_name: php-service
    build:
      context: ./php
    ports:
      - "9000:9000"
    volumes:
      - ./app:/var/www/symfony_docker
    depends_on:
      - database
    networks:
      symfony_docker:
  nginx:
    container_name: nginx-service
    image: nginx:stable-alpine
    ports:
      - "8080:80"
    volumes:
      - ./app:/var/www/symfony_docker
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - database
    networks:
      symfony_docker:
  elasticsearch:
    build:
      context: ./elk/elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - ./elk/elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - ${ES_PORT}:${ES_PORT}
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    restart: unless-stopped
    networks:
      symfony_docker:

  logstash:
    build:
      context: ./elk/logstash/
      args:
        LOGSTASH_VERSION: ${LOGSTASH_VERSION}
    volumes:
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - ${LOGSTASH_PORT}:${LOGSTASH_PORT}
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      symfony_docker:

  kibana:
    build:
      context: ./elk/kibana/
      args:
        KIBANA_VERSION: ${KIBANA_VERSION}
    volumes:
      - ./elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - ${KIBANA_PORT}:${KIBANA_PORT}
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      symfony_docker:

networks:
  symfony_docker:
  elk:
